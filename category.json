[
  {
    "list": {
      "knight's_tour": "Knight’s tour problem",
      "n_queens": "N Queens Problem"
    },
    "name": "Backtracking",
    "zh_name": "回溯法",
    "slug": "backtracking"
  },
  {
    "list": {
      "affine_cipher": "Affine Cipher",
      "caesar_cipher": "Caesar Cipher"
    },
    "name": "Cryptography",
    "zh_name": "密码学",
    "slug": "cryptography"
  },
  {
    "list": {
      "catalan_number": "Catalan Number",
      "fibonacci": "Fibonacci Sequence",
      "integer_partition": "Integer Partition",
      "knapsack_problem": "Knapsack Problem",
      "longest_common_subsequence": "Longest Common Subsequence",
      "longest_increasing_subsequence": "Longest Increasing Subsequence",
      "longest_palindromic_subsequence": "Longest Palindromic Subsequence",
      "max_subarray": "Maximum Subarray",
      "max_sum_path": "Maximum Sum Path",
      "pascal_triangle": "Pascal's Triangle",
      "shortest_common_supersequence": "Shortest Common Supersequence",
      "sliding_window": "Sliding Window",
      "ugly_numbers": "Ugly Numbers"
    },
    "name": "Dynamic Programming",
    "zh_name": "动态规划",
    "slug": "dp"
  },
  {
    "list": {
      "bellman_ford": "Bellman-Ford",
      "bfs": "BFS",
      "bridges": "Find-Bridges",
      "dfs": "DFS",
      "dls": "Depth-Limited Search",
      "dijkstra": "Dijkstra",
      "floyd_warshall": "Floyd-Warshall",
      "page_rank": "PageRank Algorithm",
      "topological_sort": "Topological-Sort",
      "tarjan": "Tarjan"
    },
    "name": "Graph Search",
    "zh_name": "图搜索",
    "slug": "graph_search"
  },
  {
    "list": {
      "job_scheduling": "Job Scheduling Problem",
      "majority_element": "Majority Element(Boyer–Moore majority vote algorithm)"
    },
    "name": "Greedy",
    "zh_name": "贪婪算法",
    "slug": "greedy"
  },
  {
    "list": {
      "kruskal": "Kruskal's Algorithm",
      "prim": "Prim's Algorithm"
    },
    "name": "Minimum Spanning Tree",
    "zh_name": "最小生成树",
    "slug": "mst"
  },
  {
    "list": {
      "euclidean_algorithm": "Euclidean Algorithm",
      "sieve_of_eratosthenes": "Sieve of Eratosthenes",
      "freivalds_algorithm": "Freivalds Algorithm",
      "miller_rabin_primality_test": "Miller-Rabin primality test"
    },
    "name": "Number Theory",
    "zh_name": "数论",
    "slug": "number_theory"
  },
  {
    "list": {
      "binary_search": "Binary Search"
    },
    "name": "Search",
    "zh_name": "搜索",
    "slug": "search"
  },
  {
    "list": {
      "bucket": "Bucket Sort",
      "bubble": "Bubble Sort",
      "comb": "Comb Sort",
      "counting": "Counting Sort",
      "cycle": "Cycle Sort",
      "heap": "Heapsort",
      "insertion": "Insertion Sort",
      "merge": "Merge Sort",
      "pigeonhole": "Pigeonhole Sort",
      "quick": "Quicksort",
      "radix": "Radix Sort",
      "selection": "Selection Sort",
      "shell": "Shellsort",
      "pancake": "Pancake Sort"
    },
    "name": "Sorting",
    "zh_name": "分类",
    "slug": "sorting"
  },
  {
    "list": {
      "edit_distance": "Edit Distance",
      "knuth_morris_pratt": "KMP Substring Search",
      "rabin_karp_algorithm": "Rabin-Karp Algorithm",
      "suffix_array": "Suffix Array (construction & usage)",
      "z_algorithm": "Z Algorithm"
    },
    "name": "String",
    "zh_name": "字符",
    "slug": "string"
  },
  {
    "list": {
      "binary_search_tree": "Binary Search Tree",
      "binary_tree_traversal": "Binary Tree Traversal",
      "lowest_common_ancestor": "Lowest Common Ancestor"
    },
    "name": "Tree",
    "zh_name": "树",
    "slug": "tree"
  },
  {
    "list": {
      "flood_fill": "Flood Fill",
      "cellular_automata": "Cellular Automata",
      "create_maze": "Create Maze",
      "magic_square": "Magic Square",
      "stable_matching": "Stable Matching"
    },
    "name": "Uncategorized",
    "zh_name": "未分类",
    "slug": "slug"
  }
]
